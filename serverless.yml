org: deveesistemas
app: foodiary-backend
service: backend

provider:
  name: aws
  runtime: nodejs22.x
  region: sa-east-1
  architecture: arm64
  # timeout: 30
  environment:
    DATABASE_URL: ${env:DATABASE_URL}
    PASSWORD_HASH_SALT: ${env:PASSWORD_HASH_SALT}
    JWT_SECRET_KEY: ${env:JWT_SECRET_KEY}
    OPENAI_SECRET_KEY: ${env:OPENAI_SECRET_KEY}
    BUCKET_NAME: !Ref UploadsBucket
    MEALS_QUEUE_URL: !Ref MealsQueue
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
          Resource: !Sub "${UploadsBucket.Arn}/*"
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource: !GetAtt MealsQueue.Arn

plugins:
  - serverless-offline

package:
  individually: true

build:
  esbuild:
    minify: true
    sourcemap: false

resources:
  Resources:
    UploadsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: foodiary-api-uploads
    MealsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "foodiary-api-meals-queue"
        VisibilityTimeout: 60
        RedrivePolicy:
          maxReceiveCount: 1
          deadLetterTargetArn: !GetAtt MealsDLQ.Arn
    MealsDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "foodiary-api-meals-dlq"

functions:
  signin:
    handler: src/functions/signin.handler
    events:
      - httpApi:
          path: /signin
          method: POST

  signup:
    handler: src/functions/signup.handler
    events:
      - httpApi:
          path: /signup
          method: POST

  me:
    handler: src/functions/me.handler
    events:
      - httpApi:
          path: /me
          method: GET

  createMeal:
    handler: src/functions/create-meal.handler
    events:
      - httpApi:
          path: /meals
          method: POST

  listMeals:
    handler: src/functions/list-meals.handler
    events:
      - httpApi:
          path: /meals
          method: GET

  getMealById:
    handler: src/functions/get-meal-by-id.handler
    events:
      - httpApi:
          path: /meals/{mealId}
          method: GET

  fileUploadedEvent:
    handler: src/functions/file-uploaded-event.handler
    events:
      - s3:
          bucket: !Ref UploadsBucket
          event: s3:ObjectCreated:*
          existing: true
          forceDeploy: true

  processMeal:
    handler: src/functions/process-meal.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - MealsQueue
              - Arn
          batchSize: 2
